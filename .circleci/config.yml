defaults: &defaults
  docker:
    - image: circleci/node:12
  working_directory: ~/project

version: 2
jobs:
  Checkout Code:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      # - restore_cache: # Note: disabled because something was being cached that was causing tests to fail
      #     keys:
      #       - yarn-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
      #       - yarn-cache-{{ .Branch }}
      #       - yarn-cache-
      - run: sudo apt-get update
      - run: sudo apt-get install libomniorb4-dev
      - run:
          name: yarn install
          command: yarn install --check-files --frozen-lockfile
          no_output_timeout: 60m
      - run:
          name: yarn build
          command: yarn build
          no_output_timeout: 60m
      # - save_cache:
      #     key: yarn-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
      #     paths: [node_modules]
      - run:
          name: yarn install (production)
          command: yarn install --check-files --frozen-lockfile --production --force
          no_output_timeout: 60m
      - persist_to_workspace:
          root: .
          paths: [.]
  Check for vulnerabilities:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run: sudo apt-get install libomniorb4-dev
      - run:
          name: yarn install
          command: yarn install --check-files --frozen-lockfile
          no_output_timeout: 60m
      - run: yarn validate:dependencies
  Test node-12:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run: sudo apt-get install libomniorb4-dev
      - run: yarn install --check-files --frozen-lockfile
      - run: yarn build
      - run: ulimit -c unlimited
      - run: yarn ci
      - run: yarn send-coverage

  # Git Release:
  #   <<: *defaults
  #   steps:
  #     - attach_workspace:
  #         at: ~/project
  #     - add_ssh_keys:
  #         fingerprints:
  #           - "21:4d:ff:37:4d:e2:f2:65:82:5b:b4:f7:2a:bf:9f:e3"
  #     - run: sudo apt-get install libomniorb4-dev
  #     - run: yarn install --check-files --frozen-lockfile
  #     - run: mkdir -p ~/.ssh
  #     - run:
  #         name: Keyscan Github
  #         command: ssh-keyscan -H github.com >> ~/.ssh/known_hosts
  #     - run: git config --global user.email "info@superfly.tv"
  #     - run: git config --global user.name "superflytvab"
  #     - run: yarn release
  #     - run: git push --follow-tags origin HEAD
  #     - persist_to_workspace:
  #         root: .
  #         paths: [.]
  publish-tag:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
          version: 18.06.0-ce
      - attach_workspace:
          at: .
      - run:
          name: Build Docker Image
          command: docker build -f Dockerfile.circle . -t sofietv/tv-automation-quantel-gateway:$CIRCLE_TAG
      - run:
           name: Publish Docker Image to Docker Hub
           command: |
             echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
             docker push sofietv/tv-automation-quantel-gateway:$CIRCLE_TAG
  publish-branch:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
          version: 18.06.0-ce
      - attach_workspace:
          at: .
      - run:
          name: Build Docker Image
          command: docker build -f Dockerfile.circle . -t sofietv/tv-automation-quantel-gateway:$CIRCLE_BRANCH
      - run:
           name: Publish Docker Image to Docker Hub
           command: |
             echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
             docker push sofietv/tv-automation-quantel-gateway:$CIRCLE_BRANCH

workflows:
  version: 2
  Test build and deploy(master only):
    jobs:
      - Checkout Code
      - Check for vulnerabilities:
          requires:
            - Checkout Code
          filters:
            tags:
              only: /v.*/
            branches:
              only:
                - master
                - develop
      - Test node-12:
          requires:
            - Checkout Code
      - publish-tag:
          requires:
            - Test node-12
            - Check for vulnerabilities
          filters:
            tags:
              only: /v.*/
            branches:
              ignore: /.*/
      - publish-branch:
          requires:
            - Test node-12
            - Check for vulnerabilities
          filters:
            tags:
              ignore: /.*/
            branches:
              only:
                - master
                - develop
      # - Git Release:
      #     requires:
      #       - Test node-12
      #     filters:
      #       branches:
      #         only:
      #           - master
